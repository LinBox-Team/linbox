# full times up to Q52 of dim 1008 (after to cra improvement).
# times of weekend 2005jan14.

# make list of i-th elements of lists L in list of lists LL (only when s <= L[1] <= e).
extract := proc(LL, i, s, e) local A, L; A := [];
  for L in LL do if L[1] >= s and L[1] <= e then A := [op(A), L[i]] fi od; A end;

blb := 23; #bits per prime used in blas, lu. down to 20 at 1008
bbb := 30; #bits per prime used in bb.
Q := [
#Q*Cpt 	#dim	#nnz   #t_bb	#prime	#t_blas	#prime	#t_lu	#prime
[2,	1.0,	1,	0.0,	2,	0.0,	2,	0.0,	2],
[3,	8.0,	1046,	0.05,	15,	0.01,	18,	0.0,	18],
[4,	8.0,	1046,	0.05,	19,	0.0,	22,	0.0,	22],
[5,	28.0,	4396,	1.08,	98,	0.1,	124,	0.1,	124],
[6,	28.0,	4396,	0.92,	81,	0.1,	102,	0.06,	102],
[7,	35.0,	5608,	2.26,	147,	0.23,	186,	0.18,	186],
[8,	35.0,	5608,	2.5,	164,	0.29,	207,	0.17,	207],
[9,	50.0,	8800,	9.51,	347,	1.25,	439,	0.88,	439],
[10,	50.0,	8800,	10.96,	405,	1.53,	514,	1.11,	514],
[11,	56.0,	9674,	6.41,	198,	0.77,	251,	0.53,	251],
[12,	56.0,	9674,	7.33,	229,	0.89,	289,	0.60,	289],
[22,	175.0,	36262,	445.3,	1689,  80.62,	2237,  52.84,	2237],
[24,	210.0,	41550,	635.57,	1733, 120.7,	2296,  71.84,	2296],
[32,	448.0,	97960,	5601.23, 3514, 1852.78,	4880, 703.75,	4880],
[42,	700.0,	150470,	24650,	6421, 11564.2,	8918, 3444.94,	8918],
[52,	1008.0,	225842, 70517.1, 8973, 42921.8,	12465, 10094.8,	12465] ]:
#Q := [
##"[model dim    bbt    bbp   mt        bt       lt   blp]";
#[2,   	1.0,	0,   	6.0*bbb,     0,		0,	 	0,	7],
#[3,  	8.0,	0.07,	42.0*bbb,    0.07,	0.01,		0.01,	53],
#[4,  	8.0,	0.04,	18.0*bbb,    0.04,	0.01,		0,	22],
#[5,   	28.0,	1.25,	102.0*bbb,   0.67,	0.13,		0.09,	134],
#[6,  	28.0,	3.16,	144.0*bbb,   0.89,	0.21,		0.15,	190],
#[7,  	35.0,	4.21,	216.0*bbb,   1.53,	0.53,		0.41,	287],
#[8,  	35.0,	5.24,	156.0*bbb,   1.75,	0.47,		0.37,	207],
#[9,  	50.0,	15.91,	378.0*bbb,   3.76,	2.32,		1.87,	508],
#[10,  	50.0,	18.59,	387.0*bbb,   3.28,	2.4,		1.87,	521],
#[11,  	56.0,	13.16,	281.0*bbb,   3.62,	1.75,		1.26,	380],
#[12,  	56.0,	11.71,	251.0*bbb,   5.02,	2.02,		1.59,	339],
#[22,  	175.0,	940.61,	1613.0*bbb,  52.84,	266.24,		298.7,	2265],
#[24,  	210.0,	1290.0,	1655.0*bbb,  59.7,	309.47,		353.27,	2339],
#[32,  	448.0,	12885.9, 3567.0*bbb, 330.87, 4885.91,	5292.68, 5169],
#[42,  	700.0,  54483.7, 6132.0*bbb, 745.9,	30076.00,	20788.3, 9011],
#[52,  1008.0,  174879.0, 8746.0*bbb, 1599.1, 109735.0, 	(1622.0*60*12990/9795), 12990] ]; # bogus tl 
im := 1; idim := 2; innz := 3; ibbt := 4; ibbp := 5; ibt := 6; iblp := 7; ilt := 8; iblp2 := 9; 

firstmodel := 9; #used in foo
lastmodel := 52; #used in foo
nl := extract(Q, idim, firstmodel, lastmodel); # used in foo

pbb := extract(Q, ibbp, firstmodel, lastmodel);

# bits per prime formula for iblp
bitsiblp
:= proc(p, n) evalf(p*floor(log[2](sqrt(2^52/n)))) end;

# bits pre prime formula for ibbt
bitsibbp
:= proc(p) evalf(p*30) end;

pb := zip(fo, extract(Q, iblp, firstmodel, lastmodel),
                 extract(Q, idim, firstmodel, lastmodel)); 

with(stats);

# relative error function
fg := proc(nn, p) evalf(subs(n = nn, op(2, formula1))/p - 1) end;

bar := proc(lsqarg, pl) global formula1;

  formula1 := fit[leastsquare[op(lsqarg)]]([pl, nl]);
#  print(formula1);
  print(evalf(formula1));

  

  errg := zip(fg, nl, pl);
  print("rel errs", errg);

  [describe[mean](errg),describe[standarddeviation](errg)];
end;

foobar := proc(lsqarg, loc) bar(lsqarg, extract(Q, loc, firstmodel, lastmodel)) end;

foo := proc(lsqarg, loc)
  if loc = iblp  then
    pl := zip(bitsiblp, extract(Q, loc, firstmodel, lastmodel), nl);
  else 
    pl := map(bitsibbp, extract(Q, loc, firstmodel, lastmodel));
  fi;
  #nl := extract(Q, idim, firstmodel, lastmodel);
  bar(lsqarg, pl)
end;

"blackbox nnz";
foobar([[nnz, n],nnz = a*n + b*n*log[2](n), {a,b}], innz);
#foo([[bits, n],bits = a*n, {a}], ibbp);
#foo([[bits, n],bits = a*n*log[2](n), {a}], ibbp);
"blackbox primes";
foo([[bits, n],bits = a*n + b*n*log[2](n), {a,b}], ibbp);
#foo([[bits, n],bits = a + b*n + c*n*log[2](n), {a,b,c}], ibbp);

#foo([[bits, n],bits = a*n, {a}], iblp);
#foo([[bits, n],bits = a*n*log[2](n), {a}], iblp);
"blas, lu primes";
foo([[bits, n],bits = a*n + b*n*log[2](n), {a,b}], iblp);
#foo([[bits, n],bits = a + b*n + c*n*log[2](n), {a,b,c}], iblp);

"blackbox time, one log";
foobar([[t, n], t = b*n^3*log(n), {b}], ibbt);
"blackbox time, two log ";
foobar([[t, n], t = b*n^3*log(n)^2, { b}], ibbt);
"blackbox time, two log two term";
foobar([[t, n], t = a*n^3*log(n) + b*n^3*log(n)^2, {a, b}], ibbt);

"blas time, one log";
foobar([[t, n], t = b*n^4*log(n), {b}], ibt);
"blas time, two log";
foobar([[t, n], t = b*n^4*log(n)^2, {b}], ibt);
"blas time, two log, two term";
foobar([[t, n], t = a*n^4*log(n) + b*n^4*log(n)^2, {a, b}], ibt);

"lu time, no log";
foobar([[t, n], t = b*n^4, {b}], ilt);
"lu time, one log";
foobar([[t, n], t = b*n^4*log(n), {b}], ilt);
"lu time, one log, two term";
foobar([[t, n], t = a*n^4 + b*n^4*log(n), {a,b}], ilt);

#
#lpb := map(ln,pb);
#
## b = (c*n*lg(n))^a ,  lg(b) = /*lg(c)*/ + a*lg(n*lg(n)) 
#bar([[lb, n],lb = lc + a*log(n*log[2](n)), {lc, a}], lpb); 
