%!PS-Adobe-2.0 EPSF-2.0
%%Title: time.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Fri Apr  8 11:37:05 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1380 600 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 600 M
[ [(Helvetica) 200.0 0.0 true true ( 0.01)]
] -66.7 MRshow
1380 982 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 982 M
[ [(Helvetica) 200.0 0.0 true true ( 0.1)]
] -66.7 MRshow
1380 1364 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 1364 M
[ [(Helvetica) 200.0 0.0 true true ( 1)]
] -66.7 MRshow
1380 1745 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 1745 M
[ [(Helvetica) 200.0 0.0 true true ( 10)]
] -66.7 MRshow
1380 2127 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 2127 M
[ [(Helvetica) 200.0 0.0 true true ( 100)]
] -66.7 MRshow
1380 2509 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 2509 M
[ [(Helvetica) 200.0 0.0 true true ( 1000)]
] -66.7 MRshow
1380 2891 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 2891 M
[ [(Helvetica) 200.0 0.0 true true ( 10000)]
] -66.7 MRshow
1380 3273 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 3273 M
[ [(Helvetica) 200.0 0.0 true true ( 100000)]
] -66.7 MRshow
1380 3655 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 3655 M
[ [(Helvetica) 200.0 0.0 true true ( 1e+06)]
] -66.7 MRshow
1380 4036 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 4036 M
[ [(Helvetica) 200.0 0.0 true true ( 1e+07)]
] -66.7 MRshow
1380 4418 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 4418 M
[ [(Helvetica) 200.0 0.0 true true ( 1e+08)]
] -66.7 MRshow
1380 4800 M
63 0 V
5417 0 R
-63 0 V
 stroke
1260 4800 M
[ [(Helvetica) 200.0 0.0 true true ( 1e+09)]
] -66.7 MRshow
1380 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
1380 400 M
[ [(Helvetica) 200.0 0.0 true true ( 10)]
] -66.7 MCshow
1930 600 M
0 31 V
0 4169 R
0 -31 V
2252 600 M
0 31 V
0 4169 R
0 -31 V
2480 600 M
0 31 V
0 4169 R
0 -31 V
2657 600 M
0 31 V
0 4169 R
0 -31 V
2801 600 M
0 31 V
0 4169 R
0 -31 V
2924 600 M
0 31 V
0 4169 R
0 -31 V
3030 600 M
0 31 V
0 4169 R
0 -31 V
3123 600 M
0 31 V
0 4169 R
0 -31 V
3207 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
3207 400 M
[ [(Helvetica) 200.0 0.0 true true ( 100)]
] -66.7 MCshow
3757 600 M
0 31 V
0 4169 R
0 -31 V
4078 600 M
0 31 V
0 4169 R
0 -31 V
4306 600 M
0 31 V
0 4169 R
0 -31 V
4483 600 M
0 31 V
0 4169 R
0 -31 V
4628 600 M
0 31 V
0 4169 R
0 -31 V
4750 600 M
0 31 V
0 4169 R
0 -31 V
4856 600 M
0 31 V
0 4169 R
0 -31 V
4950 600 M
0 31 V
0 4169 R
0 -31 V
5033 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
5033 400 M
[ [(Helvetica) 200.0 0.0 true true ( 1000)]
] -66.7 MCshow
5583 600 M
0 31 V
0 4169 R
0 -31 V
5905 600 M
0 31 V
0 4169 R
0 -31 V
6133 600 M
0 31 V
0 4169 R
0 -31 V
6310 600 M
0 31 V
0 4169 R
0 -31 V
6455 600 M
0 31 V
0 4169 R
0 -31 V
6577 600 M
0 31 V
0 4169 R
0 -31 V
6683 600 M
0 31 V
0 4169 R
0 -31 V
6776 600 M
0 31 V
0 4169 R
0 -31 V
6860 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true ( 10000)]
] -66.7 MCshow
1.000 UL
LTb
1380 600 M
5480 0 V
0 4200 V
-5480 0 V
0 -4200 V
 stroke
200 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true (time \(s\))]
] -66.7 MCshow
grestore
4120 100 M
[ [(Helvetica) 200.0 0.0 true true (matrix order)]
] -66.7 MCshow
2.000 UP
1.000 UL
LT0
5894 1763 M
[ [(Helvetica) 200.0 0.0 true true (BB time)]
] -66.7 MRshow
2657 1737 Pls
2657 1761 Pls
2747 1672 Pls
2747 1694 Pls
3651 2375 Pls
3795 2434 Pls
4396 2795 Pls
4750 3041 Pls
5040 3215 Pls
6317 1763 Pls
1.000 UL
LTa
5894 1563 M
[ [(Helvetica) 200.0 0.0 true true (Estimated BB)]
] -66.7 MRshow
6014 1563 M
606 0 V
-3963 65 R
90 61 V
904 608 V
144 96 V
601 399 V
354 234 V
290 190 V
6860 4405 L
2.000 UP
1.000 UL
LT2
5894 1363 M
[ [(Helvetica) 200.0 0.0 true true (MINBLAS timeS)]
] -66.7 MRshow
2657 1401 Star
2657 1434 Star
2747 1320 Star
2747 1344 Star
3651 2092 Star
3795 2158 Star
4396 2611 Star
4750 2915 Star
5040 3132 Star
6317 1363 Star
1.000 UL
LT0
5894 1163 M
[ [(Helvetica) 200.0 0.0 true true (Estimated MINBLAS)]
] -66.7 MRshow
6014 1163 M
606 0 V
2657 1047 M
90 80 V
904 797 V
144 127 V
601 525 V
354 307 V
290 251 V
6860 4704 L
2.000 UP
1.000 UL
LT4
5894 963 M
[ [(Helvetica) 200.0 0.0 true true (LUBLAS time)]
] -66.7 MRshow
2657 1342 Circle
2657 1381 Circle
2747 1258 Circle
2747 1279 Circle
3651 2021 Circle
3795 2072 Circle
4396 2451 Circle
4750 2714 Circle
5040 2892 Circle
6317 963 Circle
2.000 UL
LTb
5894 763 M
[ [(Helvetica) 200.0 0.0 true true (Estimated LUBLAS)]
] -66.7 MRshow
6014 763 M
606 0 V
2657 904 M
90 75 V
904 756 V
144 121 V
601 503 V
354 296 V
290 242 V
6860 4419 L
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
