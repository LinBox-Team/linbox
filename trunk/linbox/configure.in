AC_PREREQ(2.50)
AC_INIT(linbox/linbox.doxy)
AM_INIT_AUTOMAKE(linbox, 0.99.6)
AM_CONFIG_HEADER(config.h)
AX_PREFIX_CONFIG_H(linbox-config.h, __LINBOX)

AM_MAINTAINER_MODE

# Give a sane default for CFLAGS and CXXFLAGS
DEFAULT_CFLAGS="-O2 -Wall"

CFLAGS=${CFLAGS:-$DEFAULT_CFLAGS}
CXXFLAGS=${CXXFLAGS:-$DEFAULT_CFLAGS}

AM_ACLOCAL_INCLUDE(macros)

AC_PROG_CC
AC_PROG_CXX
AC_STDC_HEADERS
AC_DISABLE_SHARED
#AM_PROG_LIBTOOL
# JGD 08.06.2004 : new name
AC_PROG_LIBTOOL

# Machine characteristics

AC_CHECK_SIZEOF(char, 8)
AC_CHECK_SIZEOF(short, 16)
AC_CHECK_SIZEOF(int, 32)
AC_CHECK_SIZEOF(long, 32)
AC_CHECK_SIZEOF(long long, 64)
AC_CHECK_SIZEOF(__int64, 64)

# Create some useful data types of fixed, known lengths

# We hereby assume that a character is always one byte
LINBOX_INT8="char";

case $ac_cv_sizeof_char in
  1)
     TWO_BYTES=2;
     FOUR_BYTES=4;
     EIGHT_BYTES=8;
     ;;
  8)
     TWO_BYTES=16;
     FOUR_BYTES=32;
     EIGHT_BYTES=64;
esac

case $TWO_BYTES in
  $ac_cv_sizeof_short)
     LINBOX_INT16="short";
     ;;
  $ac_cv_sizeof_int)
     LINBOX_INT16="int";
     ;;
esac

case $FOUR_BYTES in
  $ac_cv_sizeof_short)
     LINBOX_INT32="short";
     ;;
  $ac_cv_sizeof_int)
     LINBOX_INT32="int";
     ;;
  $ac_cv_sizeof_long)
     LINBOX_INT32="long";
     ;;
esac

case $EIGHT_BYTES in
  $ac_cv_sizeof_short)
     LINBOX_INT64="short";
     ;;
  $ac_cv_sizeof_int)
     LINBOX_INT64="int";
     ;;
  $ac_cv_sizeof_long)
     LINBOX_INT64="long";
     ;;
  $ac_cv_sizeof_long_long)
     LINBOX_INT64="long long";
     ;;
  $ac_cv_sizeof___int64)
     LINBOX_INT64="__int64";
     ;;
esac

AC_DEFINE_UNQUOTED(INT8, $LINBOX_INT8, Canonical 8-bit data type)
AC_DEFINE_UNQUOTED(INT16, $LINBOX_INT16, Canonical 16-bit data type)
AC_DEFINE_UNQUOTED(INT32, $LINBOX_INT32, Canonical 32-bit data type)
AC_DEFINE_UNQUOTED(INT64, $LINBOX_INT64, Canonical 64-bit data type)

# Feature checks
LB_MISC

AC_LANG_CPLUSPLUS
LB_CHECK_GMP(,,[
echo '*******************************************************************************'
echo ' ERROR: GMP not found!'
echo
echo ' GMP version 3.1.1 or greater is required for this library to compile. Please'
echo ' make sure GMP is installed and specify its location with the option'
echo ' --with-gmp=<prefix> when running configure.'
echo '*******************************************************************************'
exit 1
])

LB_CHECK_NTL
LB_CHECK_GIVARO
LB_CHECK_SACLIB
LB_CHECK_LIDIA
LB_CHECK_MAPLE
LB_CHECK_ATLAS
LB_CHECK_EXPAT

LB_OPT
LB_DOC


CXXFLAGS="${GMP_CFLAGS} ${NTL_CFLAGS} ${GIVARO_CFLAGS} ${SACLIB_CFLAGS} ${CXXFLAGS}"
AC_SUBST(CXXFLAGS)

AC_OUTPUT([
Makefile
linbox-config
examples/Makefile
examples/fields/Makefile
examples/Readme-make
gmp++/Makefile
doc/Makefile
linbox/Makefile
linbox/algorithms/Makefile
linbox/fflas/Makefile
linbox/ffpack/Makefile
linbox/blackbox/Makefile
linbox/element/Makefile
linbox/field/Makefile
linbox/matrix/Makefile
linbox/randiter/Makefile
linbox/ring/Makefile
linbox/solutions/Makefile
linbox/switch/Makefile
linbox/util/Makefile
linbox/util/gmp++/Makefile
linbox/util/formats/Makefile
linbox/vector/Makefile
tests/Makefile
tests/data/Makefile
interfaces/Makefile
interfaces/maple/Makefile
macros/Makefile
])

