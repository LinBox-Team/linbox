/** \defgroup doc doc

This is a discussion of the form and organization of %LinBox documentation.

The doc directory contains 
- in subdirectory html/ the html documentation, built using Doxygen.  Start at 
  <a href="index.html">html/index.html</a>.
- in subdirectory latex/ the latex reference manual, built using Doxygen. This amounts to 
everything in the html documentation written out sequentially.
- Doxyfile, which specifies parameters for Doxygen.
- doc.doxy, which is the source of this page.
- mainpage.doxy, which is the source of html/index.html.
- linbox.html and install-dev.html, some basic install info.

There is a documentation page for each directory (see Modules)
and each class of the %LinBox distribution.
A directory (Module) page discusses the primary concepts supported by codes in 
the directory and lists the classes declared in the directory's files. 
A class page discusses properties of the class beyond those of the 
concept(s) it implements and lists it's documented members.  
Files have a pro forma documentation just so that the "File List" of the
documentation gives easy access to the source code.

\todo discuss the properties of the various doxygen listings.

Each documented object (directory, class, member function, ...) has a one line memo
that appears with it's name or signature in a parent object listing and at the top of
it's own page if it has one (directory, class, top-level function).  
The memo also reappears as the first line of the fuller documentation.

Some attempt is made to indicate which parts are most relevant to the user.  
{\small HOW?? }

<h4> Developers: </h4>  
Here are some rules of thumb about the documentation.

Each directory dir/ has a dir/dir.doxy file listing its most user oriented contents and explaining the general nature of them.
All other documentation is in the header files, a doc comment for each class and for 
each documented member function.
In tests/ and examples/ there is also some documentation in .C files.

Each documentation comment begins with a <tt>\\brief</tt> memo.
Keep in mind that the <tt>\\brief</tt> text appears with the name/signature line of the object
right above it.  Thus there is no need to restate information that is plain from the signature
such as the C++ type of a parameter.  Try to make the brief memo succinctly state what the object
is for.  The user, looking at the signature and brief memo, will be trying to decide whether,
at this moment in her study of things, she needs to click on this item for the fuller 
documentation of it.  Try to help.

The brief memo should not contain links to other pages.  
Put desired links in the fuller 
documentation, sometimes explicitly in "see also" section (using "\see"). 
Most particularly the brief memo should not
contain links to the object of which this item is a member.  Such links
become links to the current page and are a distraction and annoyance to the reader.

Use documented parameter listings, with <tt>\\param</tt>, when you have something significant to 
say about all or most of the parameters.  When you use \c \\param for one parameter of a function,
use it for all of them.  However, it is sometimes better to skip the \c \\param listing format 
and just discuss in sentences the parameters, their requirements on input, relation to each other, 
and properties on output.  Use your judgement about this on a case by case basis.

Members of archetypes should be thoroughly documented in the archetype and then 
not documented at all in classes adhering to the archetype.  Just a reference to the 
archetype documentation suffices.  See {\small xx??} for an example of this.
However, if the archetype function has a particular property concerning it's performance
or use in this particular class, then document that special property.
See {\small Butterfly??} for an example of this.
In some functions, particularly field members, the return value is a reference to an output 
parameter and is rarely used in practice.  In this case, don't use the \c \\return feature as it unduly places emphasis on the return value.  
See {\small fieldXX ??} for an example of this.

*/

