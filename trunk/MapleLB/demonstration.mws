{VERSION 5 0 "SUN SPARC SOLARIS" "5.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "itc avant garde" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 257 "lucida bright" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 258 "interface user" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 259 "screen" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "
" -1 260 "terminal" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
261 "" 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 262 "" 0 1 0 0 
0 0 1 1 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 263 "" 0 1 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 }{CSTYLE "" -1 264 "" 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 265 "" 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 }{PSTYLE "Normal
" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }0 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Maple Output" 0 11 1 {CSTYLE "" 
-1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 
-1 0 }{PSTYLE "" 11 12 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 }1 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Title" 0 18 1 
{CSTYLE "" -1 -1 "" 1 18 0 0 0 0 0 1 1 0 0 0 0 0 0 0 }3 0 0 -1 12 12 
0 0 0 0 0 0 19 0 }{PSTYLE "Author" 0 19 1 {CSTYLE "" -1 -1 "" 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 }3 0 0 -1 8 8 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 18 "" 0 "" {TEXT -1 0 "" }{TEXT 256 28 "Maple Lin
Box Interface, v0.1" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 19 "" 0 "
" {TEXT -1 17 "by Rich Seagraves" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 
263 "This is meant to be a proof of concept.  A cleaner and more compl
ete version of this interface is in development at this time.  That sa
id, you can pick up the C++ source code, maple script, and this docume
nt from http://www.eecis.udel.edu/~seagrave/MapleLB.tgz.  " }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 259 "LinBox is a set of libraries meant to pr
ovide fast symbolic solutions to problems in Linear Algebra.  Currentl
y it provides solutions to 3 classes of problems:  Rank calculations, \+
Determinant calculations, and the computation of a Matrix's Minimal Po
lynomial." }{TEXT 257 0 "" }{TEXT 258 0 "" }{TEXT 259 0 "" }{TEXT 260 
0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 0 "" }{TEXT 261 0 "" }{TEXT 
262 31 "Activating the LinBox Interface" }}{PARA 0 "" 0 "" {TEXT -1 
313 "The is constituted by an externally compiled library and a maple \+
script stored in a file called \"linbox.mpl\", in the path you set whe
n you installed.  This script defines a module called LinBox, which ca
n be used to access the interface.  To load the linbox module, set to \+
the correct path and read in the script." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 32 "read \"Set/Path/Here/linbox.mpl\";" }}{PARA 12 "" 1 "
" {XPPMATH 20 "6#`6'%'LBrankG%&LBdetG%*LBminpolyG%(LBapplyG%1LBapplyTr
ansposeGb6#%+thismoduleG61%'createG%)lbXrank1G%)lbXrank2G%)lbXrank3G%(
lbXdet1G%(lbXdet2G%(lbXdet3G%'lbXmp1G%'lbXmp2G%'lbXmp3G%)lbXapplyG%*lb
XapplytG%(MapToExG%(ExToMapG%2LinBoxLIBlocationG6$%(packageG/%%loadGF.
6'%'LBrankG%&LBdetG%*LBminpolyG%(LBapplyG%1LBapplyTransposeG6\"6#QGDem
onstrational~LinBox/Maple~interfaceFGFGFG%'LinBoxG61%'createG%)lbXrank
1G%)lbXrank2G%)lbXrank3G%(lbXdet1G%(lbXdet2G%(lbXdet3G%'lbXmp1G%'lbXmp
2G%'lbXmp3G%)lbXapplyG%*lbXapplytG%(MapToExG%(ExToMapG%2LinBoxLIBlocat
ionG" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 38 "The module LinBox should \+
be created.  " }}{PARA 0 "" 0 "" {TEXT -1 0 "" }{TEXT 263 0 "" }{TEXT 
264 0 "" }{TEXT 265 19 "Using the Interface" }}{PARA 0 "" 0 "" {TEXT 
-1 89 "You can access the interface through the exported functions of \+
this module.  There are 5:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
17 "LinBox[LBrank]();" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "Li
nBox[LBdet]();" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "LinBox[LB
minpoly]();" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "LinBox[LBapp
ly]();" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "LinBox[LBapplyTra
nspose]();" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 708 "All of these metho
ds perform symbolic Linear Algebra computations over a finite field (a
s LinBox does not at this time support computations over the whole of \+
the integer ring).  Thus, all of these functions takes as a first para
meter a prime defining the field, and as a second parameter a sparse M
atrix.  At current the interface does no checking to ensure that the p
rime input is indeed a prime, or that the entries are within the field
 it defines.  Let's first create a Matrix to test our functions on.  L
inBox recieved it's first big test by finding an exact solution to pro
blem #7 of Professor Lloyd Trethefan's 100 digit/100 dollar challenge,
 so why not create a small Matrix of that type, say 100x100?" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "treth := proc(i,j)" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 9 " local a;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 15 " a := abs(i-j);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 35 " if a = 0 \+
then \n       ithprime(i);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 35 " elif
 a = 2^ilog2(a) then\n       1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "
 else\n       0;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 8 " end if;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "end proc;" }}{PARA 12 "" 1 "" 
{XPPMATH 20 "6#>%&trethGf*6$%\"iG%\"jG6#%\"aG6\"F+C$>8$-%$absG6#,&9$\"
\"\"9%!\"\"@'/F.\"\"!-%)ithprimeG6#F3/F.)\"\"#-%&ilog2G6#F.F4F9F+F+F+
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 45 "M1 := Matrix(100,100, t
reth, storage=sparse);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%#M1G-%'RTA
BLEG6+\"(s/w$%)anythingG%'MatrixG%'sparseG%.Fortran_orderG7\"\"\"#;\"
\"\"\"$+\"F/" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 66 "M2 := Matri
x(100,100, treth, storage=sparse, datatype=integer[4]);" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#>%#M2G-%'RTABLEG6+\"(;&eO&%(integerG6#\"\"%%'Mat
rixG%'sparseG%.Fortran_orderG7\"\"\"#;\"\"\"\"$+\"F2" }}}{EXCHG {PARA 
0 "" 0 "" {TEXT -1 717 "Note that LinBox works only with Matrices save
d in \"sparse\" format.  However, if you specify the datatype of the M
atrix, Maple saves the Matrix in NAG sparse format, with which this in
terface is slightly optimized.  The interface doesn't actually do chec
king to see if the entries are in the field defined by the prime, this
 is left to the user.  The LBrank, LBdet and LBminpoly functions can p
erform computations on finite fields of any size (but these computatio
ns are significantly slower, it is recommended that fields are kept to
 within wordsized primes), at the moment LBapply and LBapplyTranspose \+
can only perform computations on fields defined by wordsized primes.  \+
How is each function in the interface used?" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT -1 208 "LBrank calculates the rank of the Matrix.  It only tak
es the two parameters listed above.  Note the rank is returned as a Ma
ple integer, so it will be constrained to the largest dimension of the
 Matrix.   Ex:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "LinBox[LB
rank]( 127, M1);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"$+\"" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 213 "LBdet calculates the determinant of the \+
Matrix mod the prime given.  It only takes the two parameters listed a
bove.  Note the determinant returned will always be 0 < d < p, where p
 is the prime defining the field." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 24 "LinBox[LBdet]( 127, M2);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#\"#i" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "LinB
ox[LBdet]( 127, M1);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"#i" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "LinBox[LBdet]( 1283, M2);" }
}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"$)y" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 129 "See, modular answers.  Notice the interface obviously ha
ndles Matrices saved in both NAG sparse format and Maple sparse format
.  " }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 171 "LBminpoly calculates the \+
Minimal Polynomial of the Matrix mod the prime given.  It optionally t
akes as a third arguement a variable with which to construct the polyn
omial." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "LinBox[LBminpoly]
( 127, M1);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#,fw\"#i\"\"\"*&\"#sF%)%
\"xG\"#vF%F%*&\"\"'F%)F)\"#wF%F%*&\"#%)F%)F)\"#xF%F%*&\"#**F%)F)\"#yF%
F%*&\"#TF%)F)F'F%F%*&\"$;\"F%)F)\"#tF%F%*&\"#[F%)F)\"#uF%F%*&\"$8\"F%)
F)\"#pF%F%*&\"#qF%)F)FGF%F%*&\"$7\"F%)F)\"#rF%F%*&\"#gF%)F)\"#lF%F%*&
\"#\\F%)F)\"#mF%F%*&\"#VF%)F)\"#nF%F%*&\"\"(F%)F)\"#oF%F%*&FXF%)F)F$F%
F%*&\"$4\"F%)F)\"#jF%F%*&\"#RF%)F)\"#kF%F%*&\"#5F%)F)\"#cF%F%*&\"#fF%)
F)\"#dF%F%*&FVF%)F)\"#eF%F%*&\"#AF%)F)FfoF%F%*&\"##*F%)F)FNF%F%*&\"$1
\"F%)F)\"#hF%F%*&\"#\"*F%)F)FRF%F%*&\"#GF%)F)\"#]F%F%*&\"#!*F%)F)\"#^F
%F%*&\"#CF%)F)\"#_F%F%*&FAF%)F)\"#`F%F%*&\"$-\"F%)F)\"#aF%F%*&\"#8F%)F
)\"#bF%F%*&\"#\")F%)F)\"#XF%F%*&\"$?\"F%)F)\"#YF%F%*&\"$<\"F%)F)\"#ZF%
F%*&F`oF%)F)F?F%F%*&\"#;F%)F)\"#UF%F%*&\"$.\"F%)F)FVF%F%*&F?F%)F)\"#WF
%F%*&FcrF%)F)F^oF%F%*&F'F%)F)\"#SF%F%*&\"#*)F%)F)F8F%F%*&\"$D\"F%)F)\"
#QF%F%*&\"$B\"F%)F)\"#OF%F%*&F_rF%)F)\"#PF%F%*&\"#&*F%)F)\"#NF%F%*&\"#
#)F%)F)FjpF%F%*&\"$@\"F%)F)\"#HF%F%*&F,F%)F)\"#IF%F%*&\"#?F%)F)\"#JF%F
%*&F,F%)F)\"#KF%F%*&F0F%)F)\"#LF%F%*&\"#$*F%)F)\"#MF%F%*&F^qF%)F)\"#BF
%F%*&FhoF%)F)FbqF%F%*&\"#6F%)F)\"#DF%F%*&\"#()F%)F)\"#EF%F%*&FirF%)F)
\"#FF%F%*&F]wF%)F)F]pF%F%*&F_wF%)F)\"#>F%F%*&F0F%)F)FjuF%F%*&\"\"&F%)F
)\"#@F%F%*&FivF%)F)\"#=F%F%*&FXF%)F)F]rF%F%*&FfnF%)F)\"#9F%F%*&F?F%)F)
\"#:F%F%*&FEF%)F)F_sF%F%*&FcsF%)F)\"#<F%F%*&FVF%)F)F_xF%F%*&F\\oF%)F)F
,F%F%*&\"$9\"F%)F)FZF%F%*&\"$2\"F%)F)\"\"#F%F%*&FfvF%)F)\"\"$F%F%*&\"
\"%F%)F)FazF%F%*&F=F%)F)\"#(*F%F%*&\"$+\"F%)F)\"#)*F%F%*&\"$C\"F%)F)F4
F%F%*$)F)FgzF%F%*&F\\vF%)F)FgpF%F%*&FgrF%)F)F`pF%F%*&FawF%)F)FdvF%F%*&
F.F%)F)\"#%*F%F%*&F.F%)F)F\\uF%F%*&FjyF%)F)\"#'*F%F%*&F_sF%)F)\"#&)F%F
%*&F_vF%)F)\"#')F%F%*&F[xF%)F)FawF%F%*&FfoF%)F)\"#))F%F%*&F]rF%)F)F^tF
%F%*&FPF%)F)F^qF%F%*&F8F%)F)\"#zF%F%*&F_vF%)F)\"#!)F%F%*&FcwF%)F)FarF%
F%*&FcrF%)F)F`uF%F%*&FazF%)F)\"#$)F%F%*&FiqF%)F)F0F%F%*&F2F%F)F%F%*&F
\\vF%)F)\"\")F%F%*&F4F%)F)\"\"*F%F%*&FfwF%)F)FboF%F%*&FerF%)F)F]wF%F%*
&FeuF%)F)\"#7F%F%" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 30 "LinBox
[LBminpoly](127, M1, y);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#,fw\"#i\"
\"\"*&\"#xF%%\"yGF%F%*&\"\"'F%)F(\"#wF%F%*&\"#%)F%)F(F'F%F%*&\"#**F%)F
(\"#yF%F%*&\"#TF%)F(\"#zF%F%*&F5F%)F(\"#sF%F%*&\"$;\"F%)F(\"#tF%F%*&\"
#[F%)F(\"#uF%F%*&F:F%)F(\"#vF%F%*&\"$9\"F%)F(\"\"(F%F%*&\"#JF%)F(\"\")
F%F%*&F1F%)F(\"\"*F%F%*&\"#\\F%)F(\"#mF%F%*&\"#VF%)F(\"#nF%F%*&FIF%)F(
\"#oF%F%*&\"##*F%)F(\"#gF%F%*&\"$1\"F%)F(\"#hF%F%*&FXF%)F(F$F%F%*&\"$4
\"F%)F(\"#jF%F%*&\"#RF%)F(\"#kF%F%*&FinF%)F(\"#lF%F%*&\"#AF%)F(\"#fF%F
%*&FBF%)F(\"#`F%F%*&\"$-\"F%)F(\"#aF%F%*&\"#8F%)F(\"#bF%F%*&\"#5F%)F(
\"#cF%F%*&F^pF%)F(\"#dF%F%*&FVF%)F(\"#eF%F%*&\"#CF%)F(\"#_F%F%*&\"$<\"
F%)F(\"#ZF%F%*&FgoF%)F(F@F%F%*&\"#\"*F%)F(FRF%F%*&\"#GF%)F(\"#]F%F%*&
\"#!*F%)F(\"#^F%F%*&\"#*)F%)F(F5F%F%*&\"#;F%)F(\"#UF%F%*&\"$.\"F%)F(FV
F%F%*&F@F%)F(\"#WF%F%*&\"#\")F%)F(\"#XF%F%*&\"$?\"F%)F(\"#YF%F%*&\"#$*
F%)F(\"#MF%F%*&\"#&*F%)F(\"#NF%F%*&\"$B\"F%)F(\"#OF%F%*&FipF%)F(\"#PF%
F%*&\"$D\"F%)F(\"#QF%F%*&FisF%)F(FeoF%F%*&F:F%)F(\"#SF%F%*&\"##)F%)F(F
brF%F%*&\"$@\"F%)F(\"#HF%F%*&F*F%)F(\"#IF%F%*&\"#?F%)F(FKF%F%*&F*F%)F(
\"#KF%F%*&F.F%)F(\"#LF%F%*&F.F%)F(FavF%F%*&\"\"&F%)F(\"#@F%F%*&\"#6F%)
F(F\\pF%F%*&FfrF%)F(\"#BF%F%*&F`qF%)F(FeqF%F%*&F`wF%)F(\"#DF%F%*&\"#()
F%)F(\"#EF%F%*&FiqF%)F(\"#FF%F%*&\"#pF%)F(F]sF%F%*&FasF%)F(\"#<F%F%*&F
dwF%)F(\"#=F%F%*&FiwF%)F(\"#>F%F%*&F@F%)F(\"#:F%F%*&F`xF%)F(F[qF%F%*&F
[tF%)F(F`wF%F%*&F\\vF%)F(\"#7F%F%*&FXF%)F(FgpF%F%*&FenF%)F(\"#9F%F%*&
\"$2\"F%)F(\"\"#F%F%*&FatF%)F(\"\"$F%F%*&\"\"%F%)F(FdzF%F%*&FVF%)F(F\\
wF%F%*&FcoF%)F(F*F%F%*&\"$+\"F%)F(\"#)*F%F%*&\"$C\"F%)F(F1F%F%*$)F(F[[
lF%F%*&F,F%)F(\"#%*F%F%*&F,F%)F(FctF%F%*&F]zF%)F(\"#'*F%F%*&F>F%)F(\"#
(*F%F%*&FjoF%)F(FfrF%F%*&FKF%)F(F_rF%F%*&F]tF%)F(FgnF%F%*&F[xF%)F(F_tF
%F%*&FevF%)F(\"#!)F%F%*&F]xF%)F(FgsF%F%*&FisF%)F(FguF%F%*&FdzF%)F(\"#$
)F%F%*&FcpF%)F(F.F%F%*&F]sF%)F(\"#&)F%F%*&FevF%)F(\"#')F%F%*&F\\yF%)F(
F[xF%F%*&F^pF%)F(\"#))F%F%*&FgpF%)F(FjrF%F%*&\"$8\"F%)F(FbxF%F%*&\"#qF
%)F(Fc^lF%F%*&\"$7\"F%)F(\"#rF%F%" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 39 "LinBox[LBminpoly](127, M1, boogabooga);" }}{PARA 12 "
" 1 "" {XPPMATH 20 "6#,fw\"#i\"\"\"*&\"#jF%)%+boogaboogaG\"\"'F%F%*&\"
#VF%)F)\"\"&F%F%*&\"#8F%)F)\"#*)F%F%*&\"#fF%)F)\"#))F%F%*&\"#>F%)F)\"#
()F%F%*&\"$-\"F%)F)\"#%)F%F%*&\"#;F%)F)\"#&)F%F%*&\"#KF%)F)\"#')F%F%*&
\"\"%F%)F)\"#$)F%F%*&\"#EF%)F)\"#\")F%F%*&\"#XF%)F)\"##)F%F%*&\"#TF%)F
)\"#zF%F%*&FDF%)F)\"#!)F%F%*&F*F%)F)\"#wF%F%*&F>F%)F)\"#xF%F%*&\"#**F%
)F)\"#yF%F%*&\"#[F%)F)\"#uF%F%*&\"#sF%)F)\"#vF%F%*&FTF%)F)FcoF%F%*&\"$
;\"F%)F)\"#tF%F%*&F,F%)F)\"#eF%F%*&\"#AF%)F)F4F%F%*&\"$8\"F%)F)\"#pF%F
%*&\"#qF%)F)FgpF%F%*&F,F%)F)\"#nF%F%*&\"\"(F%)F)\"#oF%F%*&\"#gF%)F)\"#
lF%F%*&\"#\\F%)F)\"#mF%F%*&\"#RF%)F)\"#kF%F%*&\"$1\"F%)F)\"#hF%F%*&F[q
F%)F)F$F%F%*&\"$4\"F%)F)F'F%F%*&\"##*F%)F)FaqF%F%*&F4F%)F)\"#dF%F%*&F0
F%)F)\"#bF%F%*&\"#5F%)F)\"#cF%F%*&FaoF%)F)\"#`F%F%*&F<F%)F)\"#aF%F%*&
\"#CF%)F)\"#_F%F%*&\"#GF%)F)\"#]F%F%*&\"#!*F%)F)\"#^F%F%*&F[rF%)F)F_oF
%F%*&\"#\"*F%)F)FeqF%F%*&\"$?\"F%)F)\"#YF%F%*&\"$<\"F%)F)\"#ZF%F%*&F_o
F%)F)\"#WF%F%*&FNF%)F)FPF%F%*&F@F%)F)\"#UF%F%*&\"$.\"F%)F)F,F%F%*&FPF%
)F)FiqF%F%*&FcoF%)F)\"#SF%F%*&F2F%)F)FTF%F%*&\"$D\"F%)F)\"#QF%F%*&F]sF
%)F)\"#PF%F%*&\"#&*F%)F)\"#NF%F%*&\"$B\"F%)F)\"#OF%F%*&F>F%)F)\"#LF%F%
*&\"#$*F%)F)\"#MF%F%*&F*F%)F)FDF%F%*&F*F%)F)\"#IF%F%*&\"#?F%)F)\"#JF%F
%*&\"$@\"F%)F)\"#HF%F%*&F^uF%)F)\"#FF%F%*&FRF%)F)F]tF%F%*&\"#6F%)F)\"#
DF%F%*&F:F%)F)FLF%F%*&FatF%)F)\"#BF%F%*&FjrF%)F)FisF%F%*&F\\yF%)F)F`pF
%F%*&F>F%)F)F_xF%F%*&F.F%)F)\"#@F%F%*&FcyF%)F)\"#=F%F%*&F^yF%)F)F8F%F%
*&FepF%)F)F@F%F%*&FjuF%)F)\"#<F%F%*&F[qF%)F)F0F%F%*&F_qF%)F)\"#9F%F%*&
F_oF%)F)\"#:F%F%*&FjtF%)F)F\\yF%F%*&FexF%)F)\"#7F%F%*&FhxF%)F)F_sF%F%*
&F[oF%)F)\"\"*F%F%*&\"$9\"F%)F)F]qF%F%*&FaxF%)F)\"\")F%F%*&FhwF%)F)\"
\"$F%F%*&FHF%)F)FHF%F%*&\"$2\"F%)F)\"\"#F%F%*&\"$7\"F%)F)\"#rF%F%*&\"$
C\"F%)F)F[oF%F%*$)F)\"$+\"F%F%*&Fa]lF%)F)\"#)*F%F%*&Fe\\lF%)F)\"#'*F%F
%*&F[pF%)F)\"#(*F%F%*&FfnF%)F)\"#%*F%F%*&FfnF%)F)F[wF%F%*&F:F%)F)FfwF%
F%*&F\\uF%)F)FfrF%F%*&FcqF%)F)FatF%F%*&FaxF%)F)FgtF%F%*&FinF%F)F%F%" }
}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 50 "(Sorry about that last one, I co
uldn't help it).  " }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 89 "LBapply and
 LBapplyTranspose take as a third arguement a Maple Vector of integer \+
datatype" }}{PARA 0 "" 0 "" {TEXT -1 52 "performs an apply operation, \+
ie y <- Ax and y <- ATx" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "
x := Vector(100, i-> 2*i, datatype=integer[4]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#>%\"xG-%'RTABLEG6*\"'G!z%&%(integerG6#\"\"%&%'VectorG6#
%'columnG%,rectangularG%.Fortran_orderG7\"\"\"\";F4\"$+\"" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 34 "y1 := LinBox[LBapply](127, M1, x);
" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%#y1G-%'RTABLEG6*\"(gyB\"&%(integ
erG6#\"\"%&%'VectorG6#%'columnG!\"\"%.Fortran_orderG7\"\"\"\";F4\"$+\"
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "y2 := LinBox[LBapplyTra
nspose](127,M1,x);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%#y2G-%'RTABLEG
6*\"(Sf7%&%(integerG6#\"\"%&%'VectorG6#%$rowG!\"\"%.Fortran_orderG7\"
\"\"\";F4\"$+\"" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 408 "The Trethefan
 Matrix is symetric along the diagonal, so applying a vector of 1's to
 the Matrix and it's transpose should result in the same vector being \+
produced.  While LBapply returns a Column Vector, and applyTranspose r
eturns a Row Vector, we can check the data entries to ensure they are \+
equal.  LBapply and LBapplyTranspose return a sparse vector, so this v
ector should be saved in NAG sparse format.  " }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 43 "op(2,y1); # Extracts the Data segment of y1" }}
{PARA 12 "" 1 "" {XPPMATH 20 "6#<`q/6#\"#g\"$?\"/6#\"\"(\"$C\"/6#\"\")
\"#k/6#\"#m\"#Y/6#\"#n\"#_/6#\"#o\"#e/6#\"#p\"$;\"/6#\"#q\"#y/6#\"#rFC
/6#\"#s\"#;/6#\"#t\"#=/6#\"#u\"#?/6#\"#v\"#A/6#\"#w\"#C/6#\"#x\"#&)/6#
FC\"#G/6#\"#z\"#$*/6#\"#!)\"#(*/6#\"#\")\"$,\"/6#\"##)\"$0\"/6#\"#$)\"
$4\"/6#\"#%)\"$8\"/6#FhnFgo/6#\"#')F3/6#\"#()F_p/6#\"#))Fcp/6#\"#*)\"#
\\/6#\"#!*\"$@\"/6#\"#\"*F'/6#\"##*\"$E\"/6#F_oF\\r/6#\"#%*\"#i/6#\"#&
*\"#6/6#\"#'*Fgr/6#FcoF^o/6#\"#)*F_s/6#\"#**\"#5/6#\"$+\"\"#>/6#\"\"*F
:/6#FcsFI/6#FgrFY/6#\"#7Fbo/6#\"#8Fbp/6#\"#9\"\"&/6#\"#:Fgr/6#FJ\"#</6
#F^u\"#B/6#FNFM/6#FgsFfo/6#FR\"\"'/6#\"#@F&/6#FVFgn/6#FauFeq/6#FZF[o/6
#\"#D\"$7\"/6#\"#EF//6#\"#FFjs/6#F[oFQ/6#\"#HF_s/6#\"#IFbq/6#\"#JFfo/6
#\"#K\"#R/6#\"#LFjo/6#\"#M\"\"%/6#\"#NFcp/6#\"#O\"\"$/6#\"#P\"#f/6#\"#
QFau/6#FjwF[p/6#\"#SFdv/6#\"#TF7/6#\"#UFau/6#\"#V\"$:\"/6#\"#W\"$=\"/6
#\"#XFbz/6#F3Fgx/6#\"#ZF3/6#\"#[Fjy/6#FbqFht/6#\"#]F+/6#\"#^\"$6\"/6#F
7F[w/6#\"#`Fbq/6#\"#aFhu/6#\"#bF_p/6#\"#cFgr/6#\"#dF^u/6#F;\"$5\"/6#F
\\y\"$9\"/6#\"#hF;/6#FcrFeq/6#\"#jF[o/6#F/F`x/6#\"#lFdy/6#\"\"\"F2/6#
\"\"#F:/6#FhxFB/6#FaxFI/6#FhtFQ/6#FhuF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 43 "op(2,y2); # Extracts the Data segment of y2" }}{PARA 
12 "" 1 "" {XPPMATH 20 "6#<`q/6#\"#g\"$?\"/6#\"\"(\"$C\"/6#\"\")\"#k/6
#\"#m\"#Y/6#\"#n\"#_/6#\"#o\"#e/6#\"#p\"$;\"/6#\"#q\"#y/6#\"#rFC/6#\"#
s\"#;/6#\"#t\"#=/6#\"#u\"#?/6#\"#v\"#A/6#\"#w\"#C/6#\"#x\"#&)/6#FC\"#G
/6#\"#z\"#$*/6#\"#!)\"#(*/6#\"#\")\"$,\"/6#\"##)\"$0\"/6#\"#$)\"$4\"/6
#\"#%)\"$8\"/6#FhnFgo/6#\"#')F3/6#\"#()F_p/6#\"#))Fcp/6#\"#*)\"#\\/6#
\"#!*\"$@\"/6#\"#\"*F'/6#\"##*\"$E\"/6#F_oF\\r/6#\"#%*\"#i/6#\"#&*\"#6
/6#\"#'*Fgr/6#FcoF^o/6#\"#)*F_s/6#\"#**\"#5/6#\"$+\"\"#>/6#\"\"*F:/6#F
csFI/6#FgrFY/6#\"#7Fbo/6#\"#8Fbp/6#\"#9\"\"&/6#\"#:Fgr/6#FJ\"#</6#F^u
\"#B/6#FNFM/6#FgsFfo/6#FR\"\"'/6#\"#@F&/6#FVFgn/6#FauFeq/6#FZF[o/6#\"#
D\"$7\"/6#\"#EF//6#\"#FFjs/6#F[oFQ/6#\"#HF_s/6#\"#IFbq/6#\"#JFfo/6#\"#
K\"#R/6#\"#LFjo/6#\"#M\"\"%/6#\"#NFcp/6#\"#O\"\"$/6#\"#P\"#f/6#\"#QFau
/6#FjwF[p/6#\"#SFdv/6#\"#TF7/6#\"#UFau/6#\"#V\"$:\"/6#\"#W\"$=\"/6#\"#
XFbz/6#F3Fgx/6#\"#ZF3/6#\"#[Fjy/6#FbqFht/6#\"#]F+/6#\"#^\"$6\"/6#F7F[w
/6#\"#`Fbq/6#\"#aFhu/6#\"#bF_p/6#\"#cFgr/6#\"#dF^u/6#F;\"$5\"/6#F\\y\"
$9\"/6#\"#hF;/6#FcrFeq/6#\"#jF[o/6#F/F`x/6#\"#lFdy/6#\"\"\"F2/6#\"\"#F
:/6#FhxFB/6#FaxFI/6#FhtFQ/6#FhuF'" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 37 "evalb( % = %% ); # Are the two equal?" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#%%trueG" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 729 "E
xcellent.  This about goes over the basic usage of the first version o
f the interface.  Notice this interface is still very much in developm
ent, so watch out for new versions all the time.  A major revision is \+
underway that stores Matrices and Vectors in external code for faster \+
operations.  LinBox development is also underway to enable system solv
ing capabilities and to solve problems over the entire integer ring.  \+
The author would like to thank the LinBox team, especially Professor D
ave Saunders and Carl Devore for their help and support.  Feedback is \+
always welcome.  Rants, raves, suggestions, code improvements and even
 flames will be greatfully recieved.  Please send them to seagrave@cis
.udel.edu.  Have a nice day." }}}}{MARK "3 1 0" 50 }{VIEWOPTS 1 1 0 1 
1 1803 1 1 1 1 }{PAGENUMBERS 0 1 2 33 1 1 }
